services:
  frontend:
    build:
      context: ./client
    ports:
      - "3000:3000"  # Expose Next.js app on port 3000
    environment:
      - NODE_ENV=production
    networks:
      - pinger-network
    # Comment out the "build" section for Render deployment:
    # Use static file deployment for React/Next.js on Render.

  backend:
    build:
      context: ./server
    ports:
      - "8080:8080"  # Expose Rust backend on port 8080
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/pinger_db
      - REDIS_URL=redis://redis:6379  # Ensure Redis connection string is correct if used
    depends_on:
      - db
      # - redis  # Only include this if Redis is required
    networks:
      - pinger-network
    # Comment out the "build" section for Render deployment:
    # Use Rust build commands on Render instead.

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pinger_db
    ports:
      - "5432:5432"  # Expose PostgreSQL on port 5432
    networks:
      - pinger-network

  # redis:  # Uncomment this if you need Redis; remove the comment if not.
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"  # Expose Redis on port 6379
  #   networks:
  #     - pinger-network

networks:
  pinger-network:
    driver: bridge
